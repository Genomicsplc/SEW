// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cpp_single_sample_expectation
Rcpp::List cpp_single_sample_expectation(const Rcpp::List& sampleReads, const arma::mat& eHapsCurrent, const int nSNPs, const int N_r, const bool calculate_updates, const bool calculate_read_probabilities, int t_break, int t_reading_offset, int t_writing_offset);
RcppExport SEXP _SEW_cpp_single_sample_expectation(SEXP sampleReadsSEXP, SEXP eHapsCurrentSEXP, SEXP nSNPsSEXP, SEXP N_rSEXP, SEXP calculate_updatesSEXP, SEXP calculate_read_probabilitiesSEXP, SEXP t_breakSEXP, SEXP t_reading_offsetSEXP, SEXP t_writing_offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type sampleReads(sampleReadsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type eHapsCurrent(eHapsCurrentSEXP);
    Rcpp::traits::input_parameter< const int >::type nSNPs(nSNPsSEXP);
    Rcpp::traits::input_parameter< const int >::type N_r(N_rSEXP);
    Rcpp::traits::input_parameter< const bool >::type calculate_updates(calculate_updatesSEXP);
    Rcpp::traits::input_parameter< const bool >::type calculate_read_probabilities(calculate_read_probabilitiesSEXP);
    Rcpp::traits::input_parameter< int >::type t_break(t_breakSEXP);
    Rcpp::traits::input_parameter< int >::type t_reading_offset(t_reading_offsetSEXP);
    Rcpp::traits::input_parameter< int >::type t_writing_offset(t_writing_offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_single_sample_expectation(sampleReads, eHapsCurrent, nSNPs, N_r, calculate_updates, calculate_read_probabilities, t_break, t_reading_offset, t_writing_offset));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SEW_cpp_single_sample_expectation", (DL_FUNC) &_SEW_cpp_single_sample_expectation, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_SEW(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
